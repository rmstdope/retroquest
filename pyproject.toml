[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "retroquest"
version = "0.2.1"
description = "A retro style text based adventure game."
readme = "README.md"
authors = [
  {name = "Henrik Kurelid", email = "henrik@kurelid.se"}
]
maintainers = [
  {name = "Henrik Kurelid", email = "henrik@kurelid.se"}
]
classifiers = [
  "Development Status :: 3 - Alpha",
  "Programming Language :: Python :: 3",
  "Intended Audience :: End Users/Desktop",
  "Environment :: Console"
]
license = {file = "LICENSE"}
dependencies = [
  "prompt_toolkit",
  "pygame>=2.0.0",
  "textual>=6.2.1"
]
keywords = ["text-adventure", "game", "retro", "adventure", "interactive-fiction"]

[project.optional-dependencies] 
dev = [
    "pytest",  # testing
    "pytest-cov", # test coverage
]

[project.urls]
bugs = "https://github.com/rmstdope/retroquest/issues"
homepage = "https://github.com/rmstdope/retroquest"

[tool.setuptools]
package-dir = {"" = "src/retroquest"}

[tool.setuptools.package-data]
"*" = ["*.*"]

[tool.pytest.ini_options]
pythonpath = [
  ".", "src/retroquest",
]

[tool.pylint."BASIC"]
class-naming-style = "PascalCase"
method-naming-style = "snake_case"
function-naming-style = "snake_case"
argument-naming-style = "snake_case"
variable-naming-style = "snake_case"
# module-naming-style = "PascalCase"
module-rgx = "(test_([A-Z][a-zA-Z0-9]*|[a-z_][a-z0-9_]*))|([A-Z][a-zA-Z0-9]*)|([a-z_][a-z0-9_]*)$"

[tool.pylint.messages_control]
disable = ["import-outside-toplevel"]

[tool.ruff]
line-length = 99
target-version = "py311"
select = ["E", "F", "W", "B", "I"]
ignore = []

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
line-ending = "lf"
